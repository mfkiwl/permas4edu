$ENTER COMPONENT NAME = DFLT_COMP

    $SITUATION NAME = STEP_1
        DFLT_COMP SYSTEM = S_STEP_1  CONSTRAINTS = C_STEP_1  LOADING = L_STEP_1  RESULTS = R_STEP_1
    $END SITUATION

    $STRUCTURE

        $NODE NSET = ALL_NODES
          100  0.0  0.0  0.0
          101  1.0  0.0  0.0

        $NSET NAME = GROUND
          100 

        $NSET NAME = FREE
           101 

        $ELEMENT TYPE = MASS3 ESET = M
             1  101

        $ELEMENT TYPE = SPRING1 ESET = K0
             2  100  101

        $ELEMENT TYPE = DAMP1 ESET = C
             3  100  101

        $ELEMENT TYPE = NLSTIFF ESET = K1
             4  100  101

    $END STRUCTURE

    $SYSTEM NAME = S_STEP_1

        $GEODAT MASS CONT = MASS
            GD_M  1.0

        $GEODAT SPRING CONT = STIFF
            GD_K0   0.3

        $GEODAT SPRING CONT = FUNCTION 
            GD_K1  1

        $GEODAT DAMPER CONT = DAMP
            GD_C  0.06
  
        $ELPROP
            M    GEODAT = GD_M
            K0   GEODAT = GD_K0
            C    GEODAT = GD_C
            K1   GEODAT = GD_K1

    $END SYSTEM
     $CONSTRAINTS NAME = C_STEP_1

        $SUPPRESS DOFS = 1,2,3
           GROUND

        $SUPPRESS DOFS = 2,3
           FREE
 
     $END CONSTRAINTS

     $LOADING NAME = L_STEP_1
 
         $CONLOAD LPAT = 1
            100 1: 0.05
         $CONLOAD LPAT = 2
            101 1: 0.03

         $FREQLOAD
            LPAT = 1               HARMONIC = 0
            LPAT = 2 TYPE = COSINE HARMONIC = 1

     $END LOADING

     $RESULTS NAME = R_STEP_1

         $FREQUENCY PRIMARY = EQUI
           0.0 0.1592 0.001

     $END RESULTS
    
$EXIT COMPONENT
$ENTER FUNCTION

    $DEFVAR K1    TYPE = REAL LIST = 0.5
    $DEFVAR ALPHA TYPE = REAL LIST = 60.
    $DEFVAR G     TYPE = REAL LIST = 0.2 ! initial gap 

    $FUNCTION FORMULA FID = 1
       f(x) = K1(1)*(0.5*(1-TANH(ALPHA(1)*(x+G(1))))*(x+G(1))+
   &                 0.5*(1+TANH(ALPHA(1)*(x-G(1))))*(x-G(1)))
     
$EXIT FUNCTION
$FIN
